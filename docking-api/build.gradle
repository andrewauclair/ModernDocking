plugins {
	id 'java'
	id 'idea'
	id 'maven-publish'
	id 'signing'
	id "com.github.ben-manes.versions" version "0.50.0"
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_9
	targetCompatibility = JavaVersion.VERSION_1_9
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
}

sourceSets.main.java.srcDirs = ['src']
sourceSets.main.resources.srcDirs = ['resources']

// NOTE: do not add new dependencies here, Modern Docking is a zero-dependency library
dependencies {
}

java {
	withJavadocJar()
	withSourcesJar()
}

base {
	group = "io.github.andrewauclair"
	archivesName = "modern-docking-api"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = 'modern-docking-api'
			from components.java
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
			pom {
				name = 'Java Modern Docking API'
				description = 'Modern docking library for Java Swing'
				url = 'https://github.com/andrewauclair/ModernDocking'
				licenses {
					license {
						name = 'The MIT License'
						url = 'https://opensource.org/licenses/MIT'
					}
				}
				developers {
					developer {
						id = 'andrewauclair'
						name = 'Andrew Auclair'
						email = 'mightymalakai33@gmail.com'
					}
				}
				scm {
					connection = 'scm:git:git//github.com/andrewauclair/ModernDocking.git'
					developerConnection = 'scm:git:ssh//github.com/andrewauclair/ModernDocking.git'
					url = 'https://github.com/andrewauclair/ModernDocking'
				}
			}
		}
	}
	repositories {
		maven {
			name = "OSSRH"
			credentials {
				username = System.getenv("MAVEN_USERNAME")
				password = System.getenv("MAVEN_PASSWORD")
			}

			url = version.endsWith('SNAPSHOT') ?
					'https://s01.oss.sonatype.org/content/repositories/snapshots/'
					: 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
		}
	}
}

signing {
	sign publishing.publications.mavenJava
}

javadoc {
	if(JavaVersion.current().isJava9Compatible()) {
		options.addBooleanOption('html5', true)
	}
}
